map $http_upgrade $connection_upgrade {
  default upgrade;
  ''  close;
}

# TODO: multiple instances of server - https://stackoverflow.com/a/68199995
# to support multiple services locally
# TODO: Add access logs for each

server {
  listen 80 default_server;
  listen [::]:80 default_server;
  listen 443 ssl default_server;
  listen [::]:443 default_server;
  http2 on;

  ssl_certificate /usr/local/nginx/conf/localhost.pem;
  ssl_certificate_key /usr/local/nginx/conf/localhost-key.pem;
  # See: https://web.dev/origin-agent-cluster, https://github.com/WICG/origin-agent-cluster
  add_header Origin-Agent-Cluster ?1;

  location / {
    # NOTE: not using a variable with proxy_pass to avoid re-resolution
    # https://forum.nginx.org/read.php?2,215830,215832#msg-215832
    # which is problematic as dnsmasq isn't in container
    proxy_pass ${TARGET_SERVER};
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Real-Port $remote_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Security headers
    add_header Content-Security-Policy 'frame-ancestors ${TARGET_SERVER} localhost.';
    add_header Referrer-Policy "origin";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
  }

  # support for WebSockets on socket.io  
  location /socket.io {
    # NOTE: not using a variable with proxy_pass to avoid re-resolution
    # https://forum.nginx.org/read.php?2,215830,215832#msg-215832
    # which is problematic as dnsmasq isn't in container
    proxy_pass ${TARGET_SERVER}/socket.io;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Real-Port $remote_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # TODO: CONSIDER: security headers
  }

  # support for pseudo-websockets through sockjs
  location /sockjs-node {
    # NOTE: not using a variable with proxy_pass to avoid re-resolution
    # https://forum.nginx.org/read.php?2,215830,215832#msg-215832
    # which is problematic as dnsmasq isn't in container
    proxy_pass ${TARGET_SERVER}/sockjs-node;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Real-Port $remote_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # TODO: CONSIDER: security headers
  }

   location /ws {
    # NOTE: not using a variable with proxy_pass to avoid re-resolution
    # https://forum.nginx.org/read.php?2,215830,215832#msg-215832
    # which is problematic as dnsmasq isn't in container
    proxy_pass ${TARGET_SERVER}/ws;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Real-Port $remote_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # TODO: CONSIDER: security headers
  }
}
